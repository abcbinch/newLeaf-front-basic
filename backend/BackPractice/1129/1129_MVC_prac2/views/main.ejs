<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>홈</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
      .logRes {
        border: 2px solid skyblue;
      }
    </style>
  </head>
  <body>
    <form name="winterSweet">
      <label>아이디: <input type="text" name="userId" /></label><br />
      <label>비밀번호: <input type="password" name="userPswd" /></label><br />
      <label>닉네임: <input type="text" name="nickName" /></label><br />
      <button type="button" onclick="sweet()">로그인</button>
    </form>
    <div class="logRes"></div>
    <!-- 사용자가 입력한 정보와 데이터베이스의 정보를 대조해야 한다.
    그러려면 입력한 정보를 서버 사이드로 보내야 하는데,
    입력한 정보를 보내려면 DOM 객체를 이용해야 한다.
    하지만 서버사이드에서는 DOM 객체를 사용할 수 없기 때문에
    입력한 정보를 보내려면 axios 같은 자바스크립트 비동기 전송 프로그래밍 기법을
    쓸 수밖에 없다. -->
    <!-- 버튼을 submit이 아니라 일반 타입 버튼으로 두고 
    onclick 이벤트를 줘야 하는 거였다. 그것도 모르고 계속 헛발질 -->
  </body>
  <script>
    function sweet() {
      const resBox = document.querySelector(".logRes");
      const form = document.querySelector("form");
      const pack = {
        userId: form.userId.value,
        userPw: form.userPswd.value,
        userNic: form.nickName.value,
      };

      axios({
        method: "post",
        url: "/dataCheck",
        //routes의 url로 보내서 
        //서버사이드에서 처리한다.
        data: pack,
      })
        .then((response) => {
          console.log(response.data);
          //controller 함수에서 처리한 데이터가 여기에 담겨서 온다.
          if (response.data.isSuccess) {
            //아이디, 패스워드 전부 맞게 입력했다면
            //isSuccess는 true일 것이다.
            resBox.innerText = `${response.data.userNic}님 환영합니다.`;
          } else if (!response.data.isSuccess) {
            resBox.innerHTML =
              "<p>아이디 또는 비밀번호를 잘못 입력했습니다.</p>";
          }
        })
        .catch((err) => {
          console.log(`WARNING! WARNING! ${err}`);
        });
    }
  </script>
</html>
